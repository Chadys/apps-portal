version: '3.9'

services:
  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
#      - "8383:8383"
    volumes:
      - ../../caddy/Caddyfile:/etc/caddy/Caddyfile
      - ../../caddy/.caddy/config/:/config/
      - ../../caddy/.caddy/data/:/data/
      - ../../../../src/public:/public
    networks:
      - web


  db:
    image: timescale/timescaledb:2.3.0-pg12
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=apps_portal
      - POSTGRES_USER=apps_portal_user
      - POSTGRES_PASSWORD=apps_portal_pwd
    volumes:
      - postgres:/var/lib/postgresql/data
    # https://docs.djangoproject.com/en/3.0/ref/databases/#optimizing-postgresql-s-configuration
    command: postgres -c client_encoding="UTF8" -c default_transaction_isolation="read committed" -c timezone="UTC"
    networks:
      - db


  web:
    build:
      context: ../../../..
      dockerfile: buildrun/docker/apps_portal/Dockerfile
      target: dev-image
    image: apps-portal:develop
    command: python manage.py runserver 0.0.0.0:8000 --settings=configurations.dev-settings
    volumes:
      - ../../../../src:/code
    env_file:
      - ../../apps_portal/dev.env
    tty: true
    depends_on:
      - caddy
      - db
    networks:
      - db
      - web
      - auth

  compile-dep:
    build:
      context: ../../../..
      dockerfile: buildrun/docker/apps_portal/Dockerfile
      target: base-image
    image: apps-portal:compile
    restart: on-failure
    profiles:
      - compile
    command: >
      sh -c
      "pip-compile --upgrade --output-file requirements/base-requirements.txt requirements/base-requirements.in &&
      pip-compile --upgrade --output-file requirements/test-requirements.txt requirements/test-requirements.in &&
      pip-compile --upgrade --output-file requirements/dev-requirements.txt requirements/dev-requirements.in &&
      pip-compile --upgrade --output-file requirements/prod-requirements.txt requirements/prod-requirements.in"
    volumes:
      - ../../apps_portal/requirements/:/code/requirements/

volumes:
  postgres:
  code:

networks:
  db:
  web:
  auth:
